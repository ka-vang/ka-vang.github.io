{"version":3,"file":"onuncaughtexception.js","sourceRoot":"","sources":["../../../src/main/integrations/onuncaughtexception.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,uCAAyD;AACzD,yCAAmE;AACnE,uCAAkC;AAElC,+BAA+B;AAC/B,MAAa,mBAAmB;IAW9B;;OAEG;IACH,YACmB,UAEb,EAAE;QAFW,YAAO,GAAP,OAAO,CAElB;QAhBR;;WAEG;QACI,SAAI,GAAW,mBAAmB,CAAC,EAAE,CAAC;IAc1C,CAAC;IAEJ;;OAEG;IACI,SAAS;QACd,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,mBAAmB,EAAE,CAAC,KAAY,EAAE,EAAE;YACtD,MAAM,IAAI,GAAG,oBAAa,EAAE,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC;YACjE,IAAI,IAAI,EAAE;gBACR,oBAAa,EAAE,CAAC,SAAS,CAAC,CAAM,KAAK,EAAC,EAAE;oBACtC,KAAK,CAAC,iBAAiB,CAAC,CAAO,KAAkB,EAAE,EAAE;wBAAC,OAAA,mBACjD,KAAK,IACR,KAAK,EAAE,gBAAQ,CAAC,KAAK,IACrB,CAAA;sBAAA,CAAC,CAAC;oBAEJ,MAAM,UAAU,GAAG,oBAAa,EAAE,CAAC,SAAS,EAAgB,CAAC;oBAC7D,MAAM,UAAU,CAAC,gBAAgB,CAAC,KAAK,EAAE,EAAE,iBAAiB,EAAE,KAAK,EAAE,EAAE,oBAAa,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;oBAEnG,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;wBAC7B,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;qBAClC;yBAAM,IAAI,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAE;wBACjE,8DAA8D;wBAC9D,yDAAyD;wBACzD,OAAO,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;wBACrC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBACrB,MAAM,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC;wBACxB,MAAM,KAAK,GAAG,GAAG,KAAK,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,OAAO,EAAE,CAAC;wBAC1E,MAAM,OAAO,GAAG,wBAAwB,KAAK,EAAE,CAAC;wBAChD,iBAAM,CAAC,YAAY,CAAC,iDAAiD,EAAE,OAAO,CAAC,CAAC;qBACjF;gBACH,CAAC,CAAA,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;AA7CD;;GAEG;AACW,sBAAE,GAAW,qBAAqB,CAAC;AATnD,kDAoDC","sourcesContent":["import { getCurrentHub, NodeClient } from '@sentry/node';\nimport { Integration, SentryEvent, Severity } from '@sentry/types';\nimport { dialog } from 'electron';\n\n/** Capture unhandled erros. */\nexport class OnUncaughtException implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = OnUncaughtException.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'OnUncaughtException';\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(\n    private readonly options: {\n      onFatalError?(firstError: Error, secondError?: Error): void;\n    } = {},\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    global.process.on('uncaughtException', (error: Error) => {\n      const self = getCurrentHub().getIntegration(OnUncaughtException);\n      if (self) {\n        getCurrentHub().withScope(async scope => {\n          scope.addEventProcessor(async (event: SentryEvent) => ({\n            ...event,\n            level: Severity.Fatal,\n          }));\n\n          const nodeClient = getCurrentHub().getClient() as NodeClient;\n          await nodeClient.captureException(error, { originalException: error }, getCurrentHub().getScope());\n\n          if (this.options.onFatalError) {\n            this.options.onFatalError(error);\n          } else if (global.process.listenerCount('uncaughtException') <= 2) {\n            // In addition to this handler there is always one in Electron\n            // The dialog is only show if there are no other handlers\n            console.error('Uncaught Exception:');\n            console.error(error);\n            const ref = error.stack;\n            const stack = ref !== undefined ? ref : `${error.name}: ${error.message}`;\n            const message = `Uncaught Exception:\\n${stack}`;\n            dialog.showErrorBox('A JavaScript error occurred in the main process', message);\n          }\n        });\n      }\n    });\n  }\n}\n"]}