{"version":3,"file":"dispatch.js","sourceRoot":"","sources":["../src/dispatch.ts"],"names":[],"mappings":"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","sourcesContent":["import { ClientClass, Dsn, Scope } from '@sentry/core';\nimport {\n  Breadcrumb,\n  Integration,\n  IntegrationClass,\n  SentryBreadcrumbHint,\n  SentryEvent,\n  SentryEventHint,\n  SentryResponse,\n  Severity,\n} from '@sentry/types';\nimport { dynamicRequire } from '@sentry/utils/misc';\nimport { CommonClient, ElectronOptions } from './common';\n\n/**\n * The Sentry Electron SDK Frontend.\n *\n * @see ElectronOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class ElectronClient implements CommonClient {\n  /** Actual frontend implementation for the main or renderer process. */\n  private readonly inner: CommonClient;\n\n  /**\n   * Creates a new Electron SDK instance.\n   *\n   * This constructor automatically chooses the right implementation for the\n   * process type (`browser` or `renderer`).\n   *\n   * @param options Configuration options for this SDK.\n   */\n  public constructor(options: ElectronOptions) {\n    // We dynamically load the frontend implementation for the current process\n    // type. In frontend bundlers such as webpack or rollup, those requires are\n    // resolved statically. For this reason, we use `dynamicRequire` for the\n    // main implementation here, which is only defined in the main process. The\n    // renderer implementation must use the default `require`.\n\n    // In case `process.type` is not defined, dispatch defaults to the renderer\n    // implementation, which should be fine for most cases. False positives of\n    // this would be running `@sentry/electron` in a bare node process, which is\n    // acceptable.\n    // tslint:disable:no-unsafe-any\n    const clientClass: ClientClass<CommonClient, ElectronOptions> =\n      process.type === 'browser' ? dynamicRequire(module, './main').MainClient : require('./renderer').RendererClient;\n    // tslint:enable:no-unsafe-any\n    this.inner = new clientClass(options);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public async captureMinidump(path: string, event: SentryEvent, scope: Scope): Promise<void> {\n    return this.inner.captureMinidump(path, event, scope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public install(): boolean {\n    return this.inner.install();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public async captureException(exception: any, hint?: SentryEventHint, scope?: Scope): Promise<SentryResponse> {\n    return this.inner.captureException(exception, hint, scope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public async captureMessage(\n    message: string,\n    level?: Severity,\n    hint?: SentryEventHint,\n    scope?: Scope,\n  ): Promise<SentryResponse> {\n    return this.inner.captureMessage(message, level, hint, scope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public async captureEvent(event: SentryEvent, hint?: SentryEventHint, scope?: Scope): Promise<SentryResponse> {\n    return this.inner.captureEvent(event, hint, scope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, hint?: SentryBreadcrumbHint, scope?: Scope | undefined): void {\n    this.inner.addBreadcrumb(breadcrumb, hint, scope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getDsn(): Dsn | undefined {\n    return this.inner.getDsn();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getOptions(): ElectronOptions {\n    return this.inner.getOptions();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public async close(timeout?: number): Promise<boolean> {\n    return this.inner.close(timeout);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public async flush(timeout?: number): Promise<boolean> {\n    return this.inner.flush(timeout);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public showReportDialog(options: any): void {\n    // tslint:disable-next-line\n    this.inner.showReportDialog(options);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    return this.inner.getIntegration(integration);\n  }\n}\n\n/**\n * This either calls init on main with node interations or renderer\n * with browser integrations.\n *\n * @param options Options\n */\nexport function specificInit(options: ElectronOptions): void {\n  // tslint:disable-next-line\n  process.type === 'browser' ? dynamicRequire(module, './main').init(options) : require('./renderer').init(options);\n}\n\n/** Convenience interface used to expose Integrations */\nexport interface Integrations {\n  [key: string]: Integration;\n}\n/** Return all integrations depending if running in browser or renderer. */\nexport function getIntegrations(): { node: Integrations; electron: Integrations } | { browser: Integrations } {\n  // tslint:disable:no-unsafe-any\n  return process.type === 'browser'\n    ? {\n        electron: dynamicRequire(module, './main').ElectronIntegrations,\n        node: dynamicRequire(module, './main').NodeIntegrations,\n      }\n    : { browser: require('./renderer').BrowserIntegrations };\n  // tslint:enable:no-unsafe-any\n}\n"]}